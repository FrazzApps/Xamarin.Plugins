<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WindowsAzure.Mobile.Ext</name>
    </assembly>
    <members>
        <member name="T:Microsoft.WindowsAzure.MobileServices.PartialEvaluator">
            <summary>
            Evaluates all of an expression's subtrees that aren't dependent on any
            parameters to the expression (things like local variables).  This is
            necessary so we can turn the evaluated values into constants that we
            can send to the server where the query executes.
            </summary>
            <remarks>
            Note that by evaluating as much of the expression as possible now, any
            future re-evaluation of the query (for the purposes of paging in the
            MobileServiceCollectionView, etc.) will use constants rather than
            the latest values in closed variables, etc.  This is desirable behavior
            for data source paging but should be carefully considered for other
            scenarios.
            -
            This code is based on the concepts discussed in
            http://blogs.msdn.com/b/mattwar/archive/2007/08/01/linq-building-an-iqueryable-provider-part-iii.aspx
            which is pointed to by MSDN as the reference for building LINQ 
            providers.
            </remarks>
        </member>
        <member name="M:Microsoft.WindowsAzure.MobileServices.PartialEvaluator.PartiallyEvaluate(System.Linq.Expressions.Expression)">
            <summary>
            Evaluate all subtrees of an expression that aren't dependent on
            parameters to that expression and replace the subtree with a
            constant expression.
            </summary>
            <param name="expression">
            The expression to partially evaluate.
            </param>
            <returns>
            An expression in which every node is either a constant or part of
            a subtree that depends on a one of the expression's parameters.
            </returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.MobileServices.PartialEvaluator.FindIndependentSubtrees(System.Linq.Expressions.Expression)">
            <summary>
            Walk the expression and compute all of the subtrees that are not
            dependent on any of the expressions parameters.
            </summary>
            <param name="expression">The expression to analyze.</param>
            <returns>
            A set of all the expression subtrees that are independent from the
            expression's parameters.  Note that this set will include every
            element of an independent subtree, but it's not a problem because
            the EvaluateIndependentSubtrees walks top down.
            </returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.MobileServices.PartialEvaluator.EvaluateIndependentSubtrees(System.Linq.Expressions.Expression,System.Collections.Generic.List{System.Linq.Expressions.Expression})">
            <summary>
            Replace all the independent subtrees in an expression with
            constants equal to the expression's evaluated result.
            </summary>
            <param name="expression">
            The expression to partially evaluate.
            </param>
            <param name="subtrees">
            The independent subtrees in the expression.
            </param>
            <returns>
            An expression that depends only on parameter values.
            </returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.MobileServices.VisitorHelper">
            <summary>
            Visit all the members of specific types of expression tree nodes.  This
            helps reduce the number of specific visitor classes we need to declare.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MobileServices.VisitorHelper.visitor">
            <summary>
            A visitor callback for the generic Visit method that takes the
            Expression along with a function that will recurse and returns the
            visited expression or a modified value.
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MobileServices.VisitorHelper.memberVisitor">
            <summary>
            A visitor callback for the VisitMember method that takes the
            MemberExpression along with a function that will recurse and
            returns the visisted expression or a modified value.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MobileServices.VisitorHelper.#ctor">
            <summary>
            Private constructor to prevent instantiation.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MobileServices.VisitorHelper.VisitAll(System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression},System.Linq.Expressions.Expression})">
            <summary>
            Visit all the nodes in the expression.
            </summary>
            <param name="expression">The expression to visit.</param>
            <param name="visitor">
            A function that takes the current node and another function to
            recurse and returns an expression.
            </param>
            <returns>
            The expression obtained by visiting the input expression.
            </returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.MobileServices.VisitorHelper.VisitMembers(System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.MemberExpression,System.Func{System.Linq.Expressions.MemberExpression,System.Linq.Expressions.Expression},System.Linq.Expressions.Expression})">
            <summary>
            Visit all the member accesses in the expression.
            </summary>
            <param name="expression">The expression to visit.</param>
            <param name="visitor">
            A function that takes the current member access node and another
            function to recurse and returns and expression.
            </param>
            <returns>
            The expression obtained by visiting the input expression.
            </returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.MobileServices.VisitorHelper.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Visit every node.
            </summary>
            <param name="expression">The expression to visit.</param>
            <returns>The visisted expression.</returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.MobileServices.VisitorHelper.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visit member access.
            </summary>
            <param name="expression">The expression to visit.</param>
            <returns>The visited expression.</returns>
        </member>
        <member name="T:Microsoft.WindowsAzure.MobileServices.ExpressionUtility">
            <summary>
            An implementation of the <see cref="T:Microsoft.WindowsAzure.MobileServices.IExpressionUtility"/> interface
            for that uses the ExpressionVisitor
            </summary>
        </member>
        <member name="F:Microsoft.WindowsAzure.MobileServices.ExpressionUtility.instance">
            <summary>
            A singleton instance of the <see cref="T:Microsoft.WindowsAzure.MobileServices.ExpressionUtility"/>.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MobileServices.ExpressionUtility.PartiallyEvaluate(System.Linq.Expressions.Expression)">
            <summary>
            Evaluate all subtrees of an expression that aren't dependent on
            parameters to that expression and replace the subtree with a
            constant expression.
            </summary>
            <param name="expression">
            The expression to partially evaluate.
            </param>
            <returns>
            An expression in which every node is either a constant or part of
            a subtree that depends on a one of the expression's parameters.
            </returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.MobileServices.ExpressionUtility.GetMemberExpressions(System.Linq.Expressions.Expression)">
            <summary>
            Returns the MemberExpressions in the expression hierarchy of the <paramref name="expression"/>.
            </summary>
            <param name="expression">The expression to search for children MemberExpressions</param>
            <returns>A collection of MemberExpressions.</returns>
        </member>
        <member name="P:Microsoft.WindowsAzure.MobileServices.ExpressionUtility.Instance">
            <summary>
            A singleton instance of the <see cref="T:Microsoft.WindowsAzure.MobileServices.ExpressionUtility"/>.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MobileServices.MobileServiceClientExtensions.LoginAsync(Microsoft.WindowsAzure.MobileServices.IMobileServiceClient,Android.Content.Context,Microsoft.WindowsAzure.MobileServices.MobileServiceAuthenticationProvider)">
            <summary>
            Log a user into a Mobile Services application given a provider name.
            </summary>
            <param name="barButtonItem" type="MonoTouch.UIKit.UIBarButtonItem">
            UIBarButtonItem used to display a popover from on iPad.
            </param>
            <param name="provider" type="MobileServiceAuthenticationProvider">
            Authentication provider to use.
            </param>
            <returns>
            Task that will complete when the user has finished authentication.
            </returns>
        </member>
        <member name="M:Microsoft.WindowsAzure.MobileServices.MobileServiceClientExtensions.LoginAsync(Microsoft.WindowsAzure.MobileServices.IMobileServiceClient,Android.Content.Context,System.String)">
            <summary>
            Log a user into a Mobile Services application given a provider name.
            </summary>
            <param name="barButtonItem" type="MonoTouch.UIKit.UIBarButtonItem">
            UIBarButtonItem used to display a popover from on iPad.
            </param>
            <param name="provider" type="string">
            The name of the authentication provider to use.
            </param>
            <returns>
            Task that will complete when the user has finished authentication.
            </returns>
        </member>
        <member name="F:Microsoft.WindowsAzure.MobileServices.ApplicationStorage.instance">
            <summary>
            A singleton instance of the <see cref="T:Microsoft.WindowsAzure.MobileServices.ApplicationStorage"/>.
            </summary>
        </member>
        <member name="P:Microsoft.WindowsAzure.MobileServices.ApplicationStorage.Instance">
            <summary>
            A singleton instance of the <see cref="T:Microsoft.WindowsAzure.MobileServices.ApplicationStorage"/>.
            </summary>
        </member>
        <member name="M:Microsoft.WindowsAzure.MobileServices.CurrentPlatform.Init">
            <summary>
            You must call this method from your application in order to ensure
            that this platform specific assembly is included in your app.
            </summary>
        </member>
    </members>
</doc>
